{"paragraphs":[{"text":"%md\n###Derive the binary variables \n**Lets create the binary variables based on the insights from previous session.","dateUpdated":"2017-04-05T10:52:03+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1491140980365_-1412512123","id":"20170402-134940_902192672","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Derive the binary variables</h3>\n<p>**Lets create the binary variables based on the insights from previous session.</p>\n"},"dateCreated":"2017-04-02T01:49:40+0000","dateStarted":"2017-04-02T01:51:11+0000","dateFinished":"2017-04-02T01:51:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:81"},{"text":"%pyspark\n\nfrom pyspark.sql import functions as F\nfrom  pyspark.sql.functions import datediff\nfrom pyspark.sql import HiveContext\nimport pyspark.mllib.regression\nimport os\nfrom pyspark.mllib.regression import LabeledPoint\nsqlContext = HiveContext(sc)\nfrom pyspark.ml.classification import LogisticRegression\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.classification import RandomForestClassifier\nfrom pyspark.ml.feature import StringIndexer, VectorIndexer\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator\nfrom pyspark.mllib.classification import LogisticRegressionWithLBFGS, LogisticRegressionModel, LogisticRegressionWithSGD\nfrom pyspark.mllib.regression import LabeledPoint\nfrom pyspark.mllib.recommendation import MatrixFactorizationModel\n\n\n#define the binary variables for modelling\ntobeAnalysedDF = sqlContext.sql('select Overdue,case when creditlimit>=\t7539 and creditlimit<=3255563 then 1 else 0 end as creditLimit_7539To3255563,case when paymentterm>=\t76 and paymentterm<=250 then 1 else 0 end as paymentterm_76To250,case when amount>=\t12570 and amount<=\t92049 then 1 else 0 end as amount_12570To92049,case when relationshipAge>=\t4000 and relationshipAge<=7000 then 1 else 0 end as relationshipAge4000To7000 from tobeanalyseddf where year(PaymentDate)<=2013 and month(PaymentDate)<=6')\n\n\n#Define training and testing data set.\n(trainingData, testData) = tobeAnalysedDF.randomSplit([0.7, 0.3])\n\n#Training variable set\ntrainingData=trainingData.map(lambda line:LabeledPoint(line[0],[line[1:]]))\n\n#Testing variable set\ntestVariableSet=testData.map(lambda line: line[1:])\ntestTarget=testData.map(lambda line: line[0])\n\n\n#Create a logistic regression Model on training data\nlrm = LogisticRegressionWithLBFGS.train(sc.parallelize(trainingData.collect()), iterations=10)\n\n#Predict the test data\npredictedSet= lrm.predict(testVariableSet)\n\n#Create Dataframe on result sets for further analysis\ncompareDF=predictedSet.zip(testTarget)\ncompareDF = compareDF.toDF(['Predicted', 'Actual'])\nsqlc.registerDataFrameAsTable(compareDF, \"compareDF\")","dateUpdated":"2017-04-05T16:33:28+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1491141039545_-2031680373","id":"20170402-135039_1668794164","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-04-02T01:50:39+0000","dateStarted":"2017-04-05T16:33:28+0000","dateFinished":"2017-04-05T16:33:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:82"},{"text":"%sql\nselect   sum(case when Predicted==Actual then 1 else 0 end) as result,count(*) as Total from compareDF","dateUpdated":"2017-04-05T17:10:07+0000","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"result","index":0,"aggr":"sum"}],"values":[{"name":"Total","index":1,"aggr":"sum"},{"name":"result","index":0,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"result","index":0,"aggr":"sum"},"yAxis":{"name":"Total","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1491141174651_214862998","id":"20170402-135254_2136452399","result":{"code":"SUCCESS","type":"TABLE","msg":"result\tTotal\n374\t385\n","comment":"","msgTable":[[{"key":"Total","value":"374"},{"key":"Total","value":"385"}]],"columnNames":[{"name":"result","index":0,"aggr":"sum"},{"name":"Total","index":1,"aggr":"sum"}],"rows":[["374","385"]]},"dateCreated":"2017-04-02T01:52:54+0000","dateStarted":"2017-04-05T17:10:07+0000","dateFinished":"2017-04-05T17:10:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:83","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1491406302440_1601891791","id":"20170405-153142_180519440","dateCreated":"2017-04-05T15:31:42+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:85"}],"name":"Predict Overdue","id":"2CCSY8TS7","angularObjects":{"2BYG9GAN3:shared_process":[],"2C139U1BG:shared_process":[],"2BYWWZJPK:shared_process":[],"2C2VAKPN2:shared_process":[],"2BZC2RPUW:shared_process":[],"2BZQEH9EH:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}